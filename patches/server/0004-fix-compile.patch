From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: CoolLoong <1542536763@qq.com>
Date: Sun, 19 May 2024 01:46:03 +0800
Subject: [PATCH] fix: compile


diff --git a/src/main/java/net/minecraft/network/CompressionDecoder.java b/src/main/java/net/minecraft/network/CompressionDecoder.java
index 65753584ce2316efa89bca7728ba6436e3b585a9..085c0f44da375d59c56a8aefa91f4b96ae0aeb81 100644
--- a/src/main/java/net/minecraft/network/CompressionDecoder.java
+++ b/src/main/java/net/minecraft/network/CompressionDecoder.java
@@ -20,6 +20,7 @@ public class CompressionDecoder extends ByteToMessageDecoder {
     public CompressionDecoder(int compressionThreshold, boolean rejectsBadPackets) {
         this.threshold = compressionThreshold;
         this.validateDecompressed = rejectsBadPackets;
+        this.inflater = null;
         // Paper end - Use Velocity cipher
     }
 
diff --git a/src/main/java/org/allaymc/jegenerator/mappings/populator/BiomeRegistryLoader.java b/src/main/java/org/allaymc/jegenerator/mappings/populator/BiomeRegistryLoader.java
index 4df722e9273124198c30b2c10038ee4b99bfe317..436e1203e12b26c861e05d9f6674a5c039e8a304 100644
--- a/src/main/java/org/allaymc/jegenerator/mappings/populator/BiomeRegistryLoader.java
+++ b/src/main/java/org/allaymc/jegenerator/mappings/populator/BiomeRegistryLoader.java
@@ -64,9 +64,9 @@ public class BiomeRegistryLoader implements RegistryLoader<String, Int2IntArrayM
         layers = WorldLoader.loadAndReplaceLayer(resourceManager, layers, RegistryLayer.WORLDGEN, RegistryDataLoader.WORLDGEN_REGISTRIES);
         var REGISTRY_CUSTOM = layers.compositeAccess().freeze();
         // Register vanilla pack
-        var DATA_PACK = ReloadableServerResources.loadResources(resourceManager, REGISTRY_CUSTOM, FeatureFlags.REGISTRY.allFlags(), Commands.CommandSelection.DEDICATED, 0, MoreExecutors.directExecutor(), MoreExecutors.directExecutor()).join();
+        var DATA_PACK = ReloadableServerResources.loadResources(resourceManager, layers, FeatureFlags.REGISTRY.allFlags(), Commands.CommandSelection.DEDICATED, 0, MoreExecutors.directExecutor(), MoreExecutors.directExecutor()).join();
         // Bind tags
-        DATA_PACK.updateRegistryTags(REGISTRY_CUSTOM);
+        DATA_PACK.updateRegistryTags();
         // Biome shortcut
         var biomeRegistry = REGISTRY_CUSTOM.registryOrThrow(Registries.BIOME);
 
diff --git a/src/main/java/org/allaymc/jegenerator/utils/AllayChunkUtils.java b/src/main/java/org/allaymc/jegenerator/utils/AllayChunkUtils.java
index 557e5fabd298fbaf05c87896564f6430a8bf51a1..b920815c14228a4cc8d56dedb6b448ebaab0be74 100644
--- a/src/main/java/org/allaymc/jegenerator/utils/AllayChunkUtils.java
+++ b/src/main/java/org/allaymc/jegenerator/utils/AllayChunkUtils.java
@@ -35,11 +35,11 @@ public class AllayChunkUtils {
                     int biome = BIOME_MAPPINGS.getOrDefault(id, 1);
                     output.setBiome(x, y, z, VanillaBiomeId.fromId(biome));
 
-                    CompoundTag blockEntityNBT = input.getBlockEntityNbtForSaving(new BlockPos((input.locX << 4) + x, y, (input.locZ << 4) + z));
+                    /*CompoundTag blockEntityNBT = input.getBlockEntityNbtForSaving(new BlockPos((input.locX << 4) + x, y, (input.locZ << 4) + z));
                     //todo translate blockEntity NBT and block
                     if (blockEntityNBT != null) {
                         continue;
-                    }
+                    }*/
 
                     BlockState blockState = input.getBlockState(x, y, z);
                     boolean hasWater = blockState.getFluidState().is(FluidTags.WATER) || (blockState.hasProperty(BlockStateProperties.WATERLOGGED) && blockState.getValue(BlockStateProperties.WATERLOGGED));
diff --git a/src/main/java/org/allaymc/jegenerator/utils/PNXChunkUtils.java b/src/main/java/org/allaymc/jegenerator/utils/PNXChunkUtils.java
index 9682942058be1206615a50ea005204cc761f7a0e..fd218739c4c448bc6551a3e345463ee03c75447f 100644
--- a/src/main/java/org/allaymc/jegenerator/utils/PNXChunkUtils.java
+++ b/src/main/java/org/allaymc/jegenerator/utils/PNXChunkUtils.java
@@ -36,11 +36,11 @@ public class PNXChunkUtils {
                     int biome = BIOME_MAPPINGS.getOrDefault(id, 1);
                     output.setBiomeId(x, y, z, biome);
 
-                    CompoundTag blockEntityNBT = input.getBlockEntityNbtForSaving(new BlockPos((input.locX << 4) + x, y, (input.locZ << 4) + z));
+                    /*CompoundTag blockEntityNBT = input.getBlockEntityNbtForSaving(new BlockPos((input.locX << 4) + x, y, (input.locZ << 4) + z));
                     //todo translate blockEntity NBT and block
                     if (blockEntityNBT != null) {
                         continue;
-                    }
+                    }*/
 
                     BlockState blockState = input.getBlockState(x, y, z);
                     boolean hasWater = blockState.getFluidState().is(FluidTags.WATER) || (blockState.hasProperty(BlockStateProperties.WATERLOGGED) && blockState.getValue(BlockStateProperties.WATERLOGGED));
